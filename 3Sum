def threeSum(nums:list[int])->list[list[int]]:
    """Function that return the triplets from an integer array nums

    Args:
        nums (list[int]): list of integers to verify

    Returns:
        list[list[int]]: list of integers that the sum of them result in 0

    e.g:
        threeSum([-1,0,1,2,-1,-4])\n
        -> [[-1, -1, 2], [-1, 0, 1]]\n
        *(-1)+(-1)+2 = 0\n
        *(-1)+0+1 = 0
    """
    triplets = []
    for i1 in range(len(nums)):
        copy = list(nums)
        copy.pop(i1)
        for i2 in range(len(copy)):
            acopy = list(copy)
            acopy.pop(i2)
            for i3 in range(len(acopy)):
                 if nums[i1]+copy[i2]+acopy[i3] == 0:
                    lvals = sorted([nums[i1], copy[i2], acopy[i3]])
                    if lvals not in triplets:
                        triplets.append(lvals)
    return sorted(triplets)
    
print(threeSum([4,-10,-11,-12,-8,-12,-14,-11,-6,2,-4,2,3,12,-3,-12,-14,-12,-8,-9,-6,-3,10,2,14,10,7,-7,-9,0,-9,10,-2,-5,14,5,-9,7,9,0,-14,12,10,4,9,-8,8,11,-5,-15,-13,-3,-11,4,14,11,-1,-2,-11,5,14,-4,-8,-3,6,-9,9,12,6,3,-10,7,0,-15,-3,-13,-8,12,13,-5,12,-15,7,8,-4,-2,4,2,3,9,-8,2,-10,-1,6,3,-2,0,-7,11,-12,-2,3,-4,-2,7,-2,-3,4,-12,-1,1,10,13,-5,-9,-12,6,8,7,0,7,-6,5,13,8,-14,-12]))